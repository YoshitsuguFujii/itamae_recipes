#  http://nodejs.osser.jp/server/nginx-max-performance/

user <%= node[:nginx][:user_name] %>;
worker_processes  auto;     #  Nginx本体のプロセス数、autoにしてnginx内部判定に任せるのは賢明
worker_rlimit_nofile  8096; # workerプロセスが最大に開けるファイル数の制限。このように設定したら、ulimit -a以上のファイル数を処理できるようになり、too many open files問題を回避できる


error_log  /var/log/nginx/error.log;

pid        /var/run/nginx.pid;

events {
    worker_connections  2048; # 一つのworkerプロセグが開ける最大コネクション数
    multi_accept on;          # できるだけクライアントからのリクエストを受け取る
    use epoll;                # Linuxカーネル2.6以上の場合はepoll、BSDの場合kqueue
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format ltsv "time:$time_local"
                "\thost:$remote_addr"
                "\tforwardedfor:$proxy_add_x_forwarded_for"
                "\tforwardedproto:$scheme"
                "\treq:$request"
                "\tstatus:$status"
                "\tsize:$body_bytes_sent"
                "\treferer:$http_referer"
                "\tua:$http_user_agent"
                "\treqtime:$request_time"
                "\tcache:$upstream_http_x_cache"
                "\truntime:$upstream_http_x_runtime"
                "\tresponse_time:$upstream_response_time"
                "\tcookie_school_id:$cookie_school_id"
                "\tuserid:$uid_got"
                "\tvhost:$host";

    access_log  /var/log/nginx/access.log  ltsv;

    sendfile        on; # ハードディスクio処理とsocket-io処理のバランスを取るため、onにしてください。
    tcp_nopush     on;  # 一つのデータパッケージに全てのヘッダー情報を含まれる

    gzip              on;
    gzip_types        text/plain text/xml text/css application/xml application/xhtml+xml application/rss+xml application/atom_xml text/javascript application/javascript application/x-javascript;
    gzip_disable      "msie6" "Mozilla/4";
    gzip_http_version 1.0;  # HTTP/1.0もgzip圧縮の対象とする
    gzip_vary         on;   # Accept-Encodingレスポンスヘッダを追加
    gzip_proxied      any;  # プロキシ経由でもgzip圧縮を有効にする
    gzip_buffers      4 8k; # gzip圧縮で使用するバッファサイズ（4 8k は 4 x 8k = 32k という意味）
    gzip_min_length   1100; # gzip圧縮する最小データサイズ

    server_tokens off; # セキュリティ対策です、エラー画面のnginxバージョン番号を非表示

    add_header Strict-Transport-Security max-age=31536000;
    client_max_body_size 10m;

    # 読み込み
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}
